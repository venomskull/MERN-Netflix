{"ast":null,"code":"var _jsxFileName = \"/Users/deepan/Documents/VsProjects/React/netflix-mern/client/src/components/list/List.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport { ArrowBackIosOutlined, ArrowForwardIosOutlined, ArrowForwardIosRounded } from \"@material-ui/icons\";\nimport './list.scss';\nimport ListItem from '../listItem/ListItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function List({\n  list\n}) {\n  _s();\n\n  const [slideNumber, setSlideNumber] = useState(0);\n  const [isMoved, setIsMoved] = useState(false);\n  const listRef = useRef();\n\n  const handleClick = direction => {\n    setIsMoved(true); // let distance = listRef.current.getBoundingClientRect();\n    // console.log(distance); // = 50\n\n    let distance = listRef.current.getBoundingClientRect().x - 50; //50 is the margin of container\n\n    if (direction === 'left' && slideNumber > 0) {\n      setSlideNumber(slideNumber - 1); //280 - 50 = 230 \n      //230 is 225 + 5 of the listItem\n\n      listRef.current.style.transform = `translateX(${distance + 230}px)`; // let distance = listRef.current.getBoundingClientRect();\n      // console.log(distance);\n    }\n\n    if (direction === 'right' && slideNumber < 5) {\n      setSlideNumber(slideNumber + 1);\n      listRef.current.style.transform = `translateX(${distance - 230}px)`;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"listTitle\",\n      children: list.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(ArrowBackIosOutlined, {\n        className: \"slideArrow left\",\n        onClick: () => handleClick('left'),\n        style: {\n          display: !isMoved && 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        ref: listRef,\n        children: [list.content.map(item), /*#__PURE__*/_jsxDEV(ListItem, {\n          index: 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ArrowForwardIosRounded, {\n        className: \"slideArrow right\",\n        onClick: () => handleClick('right')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(List, \"VfZVy3Y+grSTsvx7aSbr5wGUojc=\");\n\n_c = List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/Users/deepan/Documents/VsProjects/React/netflix-mern/client/src/components/list/List.jsx"],"names":["React","useRef","useState","ArrowBackIosOutlined","ArrowForwardIosOutlined","ArrowForwardIosRounded","ListItem","List","list","slideNumber","setSlideNumber","isMoved","setIsMoved","listRef","handleClick","direction","distance","current","getBoundingClientRect","x","style","transform","title","display","content","map","item"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAASC,oBAAT,EAA+BC,uBAA/B,EAAwDC,sBAAxD,QAAuF,oBAAvF;AACA,OAAO,aAAP;AACA,OAAOC,QAAP,MAAqB,sBAArB;;AAEA,eAAe,SAASC,IAAT,CAAc;AAACC,EAAAA;AAAD,CAAd,EAAsB;AAAA;;AACjC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMW,OAAO,GAAGZ,MAAM,EAAtB;;AAEA,QAAMa,WAAW,GAAIC,SAAD,IAAe;AAC/BH,IAAAA,UAAU,CAAC,IAAD,CAAV,CAD+B,CAE/B;AACA;;AACA,QAAII,QAAQ,GAAGH,OAAO,CAACI,OAAR,CAAgBC,qBAAhB,GAAwCC,CAAxC,GAA4C,EAA3D,CAJ+B,CAIgC;;AAC/D,QAAIJ,SAAS,KAAK,MAAd,IAAwBN,WAAW,GAAG,CAA1C,EAA6C;AACzCC,MAAAA,cAAc,CAACD,WAAW,GAAG,CAAf,CAAd,CADyC,CAEzC;AACA;;AACAI,MAAAA,OAAO,CAACI,OAAR,CAAgBG,KAAhB,CAAsBC,SAAtB,GAAmC,cAAaL,QAAQ,GAAG,GAAI,KAA/D,CAJyC,CAKzC;AACA;AACH;;AACD,QAAID,SAAS,KAAK,OAAd,IAAyBN,WAAW,GAAG,CAA3C,EAA8C;AAC1CC,MAAAA,cAAc,CAACD,WAAW,GAAG,CAAf,CAAd;AACAI,MAAAA,OAAO,CAACI,OAAR,CAAgBG,KAAhB,CAAsBC,SAAtB,GAAmC,cAAaL,QAAQ,GAAG,GAAI,KAA/D;AACH;AACJ,GAjBD;;AAmBA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACI;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA,gBAA6BR,IAAI,CAACc;AAAlC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACI,QAAC,oBAAD;AAAsB,QAAA,SAAS,EAAC,iBAAhC;AAAkD,QAAA,OAAO,EAAE,MAAMR,WAAW,CAAC,MAAD,CAA5E;AACI,QAAA,KAAK,EAAE;AAAES,UAAAA,OAAO,EAAE,CAACZ,OAAD,IAAY;AAAvB;AADX;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAK,QAAA,SAAS,EAAC,WAAf;AAA2B,QAAA,GAAG,EAAEE,OAAhC;AAAA,mBACKL,IAAI,CAACgB,OAAL,CAAaC,GAAb,CAAkBC,IAAlB,CADL,eAEI,QAAC,QAAD;AAAU,UAAA,KAAK,EAAE;AAAjB;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eASI,QAAC,sBAAD;AAAwB,QAAA,SAAS,EAAC,kBAAlC;AAAqD,QAAA,OAAO,EAAE,MAAMZ,WAAW,CAAC,OAAD;AAA/E;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH;;GAxCuBP,I;;KAAAA,I","sourcesContent":["import React, { useRef, useState } from 'react'\nimport { ArrowBackIosOutlined, ArrowForwardIosOutlined, ArrowForwardIosRounded, } from \"@material-ui/icons\";\nimport './list.scss'\nimport ListItem from '../listItem/ListItem'\n\nexport default function List({list}) {\n    const [slideNumber, setSlideNumber] = useState(0);\n    const [isMoved, setIsMoved] = useState(false);\n    const listRef = useRef();\n\n    const handleClick = (direction) => {\n        setIsMoved(true);\n        // let distance = listRef.current.getBoundingClientRect();\n        // console.log(distance); // = 50\n        let distance = listRef.current.getBoundingClientRect().x - 50; //50 is the margin of container\n        if (direction === 'left' && slideNumber > 0) {\n            setSlideNumber(slideNumber - 1);\n            //280 - 50 = 230 \n            //230 is 225 + 5 of the listItem\n            listRef.current.style.transform = `translateX(${distance + 230}px)`;\n            // let distance = listRef.current.getBoundingClientRect();\n            // console.log(distance);\n        }\n        if (direction === 'right' && slideNumber < 5) {\n            setSlideNumber(slideNumber + 1);\n            listRef.current.style.transform = `translateX(${distance - 230}px)`;\n        }\n    }\n\n    return (\n        <div className='list'>\n            <span className=\"listTitle\">{list.title}</span>\n            <div className=\"wrapper\">\n                <ArrowBackIosOutlined className='slideArrow left' onClick={() => handleClick('left')}\n                    style={{ display: !isMoved && 'none' }}\n                />\n                <div className=\"container\" ref={listRef}>\n                    {list.content.map((item))}\n                    <ListItem index={0}/>\n                    \n                </div>\n                <ArrowForwardIosRounded className='slideArrow right' onClick={() => handleClick('right')} />\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}